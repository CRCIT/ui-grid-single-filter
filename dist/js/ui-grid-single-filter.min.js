/*!
 * ui-grid-single-filter
 * https://github.com/CRCIT/ui-grid-single-filter
 * @license Apache-2.0
 * v0.4.0
 * 2016-10-21T09:40:55.124Z
 */
(function(){"use strict";angular.module("ui.grid.single.filter",["ui.grid","ui.grid.utils"])})(),function(){"use strict";angular.module("ui.grid.single.filter").directive("uiGridSingleFilter",["uiGridSingleFilterService","uiGridFilterValueService",function(e,i){return{restrict:"A",replace:!0,priority:10,require:"^uiGrid",scope:!1,compile:function(){return{pre:function(r,l,t,n){n.grid.registerRowsProcessor(e.singleFilter,200),i.grid=n.grid}}}}}])}(),function(){"use strict";angular.module("ui.grid.single.filter").directive("uiGridSingleFilterValue",["uiGridFilterValueService",function(e){return{restrict:"A",scope:!1,link:function(i,r,l){e.filterValue=null,r.bind("keyup",function(i){e.filterValue=l.$$element.val(),e.grid.refresh(),i.preventDefault()})}}}])}(),function(){"use strict";angular.module("ui.grid.single.filter").factory("uiGridFilterValueService",function(){var e=null,i=null;return{filterValue:e,grid:i}})}(),function(){"use strict";angular.module("ui.grid.single.filter").service("uiGridSingleFilterService",["$log","uiGridFilterValueService","uiGridRenderService","uiGridCommonUtilsService",function($log,uiGridFilterValueService,uiGridRenderService,uiGridCommonUtilsService){function singleFilter(renderableRows){function _concatCellValues(row){function addFilterProperty(e){e=uiGridCommonUtilsService.removeHtmlTags(e),cellValues.push(e)}var cellValues=[],renderedValue,additionalValue;return row.grid.columns&&row.grid.columns.forEach(function(col,idx){renderedValue=null,col.colDef&&col.colDef.singleFilterSearchable===!1||(renderedValue=col.colDef&&col.colDef.singleFilterValue?uiGridRenderService.getRenderStringValue(row,col,col.colDef.singleFilterValue):col.colDef&&col.colDef.singleFilterRenderCellTemplate===!1?eval(row.getQualifiedColField(col)):uiGridRenderService.getRenderedCellValue(row,col),addFilterProperty(renderedValue),col.colDef&&col.colDef.singleFilterAdditionalValue&&(additionalValue=uiGridRenderService.getRenderStringValue(row,col,col.colDef.singleFilterAdditionalValue),addFilterProperty(additionalValue)))}),renderedValue=null,additionalValue=null,cellValues.join("  ")}function _createFilterRegex(e,i){function r(e){var i=new RegExp("(\\"+["/",".","*","+","?","|","(",")","[","]","{","}","\\","$","^","-"].join("|\\")+")","g");return e.replace(i,"\\$1")}e=r(e);var l=$.map(e.match(/"[^"]+"|[^ ]+/g)||[""],function(e){if('"'===e.charAt(0)){var i=e.match(/^"(.*)"$/);e=i?i[1]:e}return e.replace('"',"")});return e="^(?=.*?"+l.join(")(?=.*?")+").*$",new RegExp(e,i?"i":"")}if(!uiGridFilterValueService.filterValue)return renderableRows;var matcher=_createFilterRegex(uiGridFilterValueService.filterValue,!0),startTime=performance.now(),filterData;return renderableRows.forEach(function(e){filterData=e.singleFilterRowFilterData,filterData||(filterData=_concatCellValues(e),e.singleFilterRowFilterData=filterData);var i=filterData.match(matcher);i||(e.visible=!1)}),$log.debug(performance.now()-startTime),filterData=null,renderableRows}return{singleFilter:singleFilter}}])}();
//# sourceMappingURL=ui-grid-single-filter.min.js.map
